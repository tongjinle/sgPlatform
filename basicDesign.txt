游戏平台:
    基本类
        平台类
        房间类
        队伍类
        用户类
        游戏类
        基本API类
        通信接口类

    通信接口类
        属性:
            平台
            用户与socketIO实例映射表
        方法:
            登录
            登出
            获取在线用户
                1. 用户名
                2. 平台状态
                3. 游戏状态
                4. 所在房间
                5. 游戏信息
                    ** 根据不同的游戏,有不同的信息展示
            获取好友列表[暂时不做]
            获取房间列表
                1. 游戏类型
                2. 房间状态
                3. 玩家人数 & 最大玩家人数
                4. 观战人数 & 最大观战人数
                5. 游戏信息
                    ** 根据不同的游戏,有不同的信息展示
            发送聊天信息

    平台类
        属性:
            用户列表
            房间列表
            队伍列表
            状态
                正常
                暂停
                关闭
        方法:
            增加用户/删除用户/查找用户/重新连接用户
            增加队伍/删除队伍/查找队伍[暂时不做]
            增加房间/删除房间/查找房间
            开启平台/暂停平台/停止平台[暂时不做]

    用户类:
        属性:
            编号
            名字
            当前队伍[暂时不做]
            当前房间
            平台状态
                在线
                离线
                断线
            游戏状态
                空闲
                队伍中[暂时不做]
                观战
                游戏中
            上次Action时间
            断线时间戳
            断线次数
            是否是队长[暂时不做]
            是否是房主
            socketIO实例
            游戏实例
        方法:
            聊天
                世界聊天
                队伍聊天[暂时不做]
                房间聊天
                私密聊天
            队伍操作[暂时不做]
                解散队伍
                邀请其他玩家加入队伍
                请求加入队伍
                离开队伍
            房间操作
                创建房间
                进入房间
                设置房间密码
                退出房间
            游戏操作
                根据type来区分游戏操作
                    'action'        =>      游戏'真实'操作,比如走动一个棋子
                    'query'         =>      游戏'查询'操作,比如查看一个棋子的血量,这样的查看不会影响游戏进展
                    'surrender'     =>      投降
            查看用户SELF信息
            观战
            匹配游戏[只能队长才可以匹配]
            重置断线信息
                ** 清空断线时间戳
                ** 清零断线次数

    房间类:
        属性:
            编号
            用户列表
            最大玩家人数[静态]
            观战用户列表
            最大观战人数[静态]
            游戏类型[静态]
            游戏实例
            是否可以加入房间观战
            房间密码
                ** 密码为空,则为非私密房间
            状态:
                进行中
                暂停
                结束
        方法:
            获取观战数据


    队伍类:[暂时不做]
        属性:
            编号
            队长编号
            用户列表
            最大玩家人数[静态]

    游戏类:
        属性:
            编号
            用户列表
            最大玩家人数[静态]
            随机种子
            正常游戏状态
                进行中
                暂停
                结束
            开始时间戳
            结束时间戳
            游戏当前时间
            游戏结果
            当前状态
            初始状态
            '真实'操作列表
            状态更新列表
            用户操作信息预处理Handler[把来自socketio的信息,转换成游戏中的对应操作]
            是否是复盘状态
                ** 在复盘状态中,
        方法:
            开始游戏
            暂停游戏
            结束游戏
            操作解析
                ** 解析之前,要判断该操作是否是合法的操作
                真实操作
                查询操作
            获取游戏状态更新
            读取当前游戏状态[完整的游戏信息]
            读取最后一步的游戏更新
            保存用户'真实'操作状态,生成一个录像文件
                ** 录像要包含以下要素
                1. 简述
                2. '真实'操作列表
                3. 随机种子

            复盘[录像系统]
                加载录像文件
                当前'真实'操作索引
                '真实'操作列表
                读取下一步
                    ** 读取一个玩家的'真实'操作,通过'操作解析',来更新游戏的状态
                    ** 维护一个状态列表
                返回上一步




            



